# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  - push

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # - run: echo npm test # hehehe

  # publish-npm:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         registry-url: https://registry.npmjs.org/
  #     - run: echo npm ci # hehehe
  #     - run: npm publish --provenance --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  notify:
    needs: build # TODO
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          PACKAGE_NAME=$(jq -r .name package.json)
          PACKAGE_VERSION=$(jq -r .version package.json)
          TEXT="ðŸ“¦ Updated package **$PACKAGE_NAME**
            New version: *$PACKAGE_VERSION*

            https://www.npmjs.com/package/$PACKAGE_NAME/v/$PACKAGE_VERSION"
          BODY=$(jq \
            --null-input \
            --arg chat_id "$TELEGRAM_CHAT_ID" \
            --arg text "$TEXT" \
            '{"chat_id":$chat_id,"text":$text}')
          echo "$BODY"
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "$BODY" \
            https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage
        env:
          TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
          TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
